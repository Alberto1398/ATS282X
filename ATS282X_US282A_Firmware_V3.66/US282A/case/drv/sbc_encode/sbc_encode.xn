/*定义GROUP BANK INDEX 和其他地址变量*/
INPUT(link_base.xn)


/*1.获取card模块的group index，驱动开发人员需选择*/
BANK_GROUP_INDEX = DRV_GROUP_STG_UHOST;

/*2.从地址map图中获取card模块的常驻代码段物理地址，只需写低14位，驱动开发人员需填写，集成开始后只由集成人员修改，驱动人员不允许修改*/
SRAM_TEXT_ADDR = SRAM_URAM_1_ADDR;
SRAM_TEXT1_ADDR = SRAM_CARD_BUF_0_ADDR;
SRAM_TEXT2_ADDR = SRAM_PCMRAM_1_ADDR;


/*3.转换为链接地址,不能修改*/
RCODE_TEXT_ADDR = RCODE_ADDR_BASE + SRAM_TEXT_ADDR;
RCODE_TEXT1_ADDR = RCODE_ADDR_BASE + SRAM_TEXT1_ADDR;
RCODE_TEXT2_ADDR = RCODE_ADDR_BASE + SRAM_TEXT2_ADDR;

RDATA_HCI_UART_RX_ADDR = RDATA_ADDR_BASE + SRAM_BT_HCI_BUF_ADDR;

KERNEL_BANK_A_ADDR_BASE = (KERNEL_BANK_A << 28) + (BANK_GROUP_INDEX << 24) + SRAM_BANK_A_ADDR;
KERNEL_BANK_B_ADDR_BASE = (KERNEL_BANK_B << 28) + (BANK_GROUP_INDEX << 24) + SRAM_BANK_B_ADDR;

/*bank的实际空间大小,不能修改*/
KERNEL_BANK_A_SIZE = SRAM_BANK_A_SIZE;
KERNEL_BANK_B_SIZE = SRAM_BANK_B_SIZE;

/*系统允许的bank的最大空间大小，不能修改*/
KERNEL_BANK_SPACE = BANK_SPACE;

OUTPUT_ARCH(mips)

ENTRY(blk_op)

SECTIONS
{
    .text RCODE_TEXT_ADDR  : 
    {
        /*API OBJ在此链接*/
        libc_op_entry.o(.text)
		sys_op_entry.o(.text)
		
		sbc_16e.o(.rcode)
		sbc_32.o(.text)
		sbc_encode_entry.o(.text)
    }
            
    .data    :  
    {
        /*5.填写rdata输入节，所以文件产生的.data都被链接到这里*/
        *.o(.data)
    }
    .bss :
    {
        *(.bss)
        *(.sbss)
        *(.common)
        *(common)
        . = SRAM_URAM_1_SIZE - SIZEOF(.data) - SIZEOF(.text);
    }
    
    .text1 RCODE_TEXT1_ADDR  : 
    {		
		  sbc_16e.o(.rodata)
		  sbc_32.o(.rodata)
    }
    
    .text2 RCODE_TEXT2_ADDR  : 
    {		
      sbc_16e.o(.text)
      sbc_32_1.o(.text .rodata)
    }
    
    /*6.链接bank a代码*/
    . = KERNEL_BANK_A_ADDR_BASE;
    OFFSET = . & (KERNEL_BANK_SPACE - 1);
    BANK_A_0    : 
    {
        sbc_bank.o(.text .rodata)

    }=0x0 
    
    . = ((. + KERNEL_BANK_SPACE) & (~(KERNEL_BANK_SPACE - 1)))  + OFFSET;
    BANK_A_1    : 
    {
        /*bt_controller_uart_bank.o(.text .rodata)*/

    }=0x0 
             
    
     /*7.链接bank b代码*/
    . = KERNEL_BANK_B_ADDR_BASE;
    OFFSET = . & (KERNEL_BANK_SPACE - 1);
    BANK_B_0    : 
    {        
        sbc_encode_init.o(.text .rodata)
        sbc_encode_exit.o(.text .rodata)

    }=0x0 

    /*假设还有一个bank b，文件名为bank_b_card_xx.c*/
    . = ((. + KERNEL_BANK_SPACE) & (~(KERNEL_BANK_SPACE - 1)))  + OFFSET;
     BANK_B_1   : 
    {

    }=0x0
    
           
    
 }
