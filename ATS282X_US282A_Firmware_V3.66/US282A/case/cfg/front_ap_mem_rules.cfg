//模块内存分布文件，可执行程序解析该文件从而分析相关模块是否有空间溢出的风险
//语法规则 一条语句描述一个段空间分配，语句必须以分号结束
//语句第一部分是分配内存的段名称，该名称由用户设定，检测程序不依赖段名称进行检测，而是对内存敏感
//冒号后面第一部分是段起始地址，以"-"开始后面部分是结束地址，程序根据这两个地址进行地址匹配
//检测模块中所有段是否有符合该段名称的段，并检测地址的合法性
//下面是常驻代码区的空间分配
.text:0xbfc1e900-0xbfc1f100;
//下面是常驻代码区1的空间分配
.text1:0xbfc10500-0xbfc11000;
//下面是app global data的空间分配
.applib_global_data:0x9fc1a080-0x9fc1a0c0;
//下面是app lib data的空间分配
.applib_data:0x9fc1a0c0-0x9fc1a2c0;
//下面是bt manager data的空间分配
.bt_manager_data:0x9fc1a2c0-0x9fc1a400;
//下面是data段的空间分配
.data:.bss-0x9fc1a080;
//下面是bss段的空间分配
.bss:0x9fc19980-.data;
//下面是control段的空间分配
BANK_FRONT_CONTROL:0x20200-0x20a00;
//下面是UI BANK段的空间分配
BANK_FRONT_UI:0x25800-0x26000;
//下面是Enhanced bank的空间分配
BANK_FRONT_ENHANCED:0x26800-0x27000;
